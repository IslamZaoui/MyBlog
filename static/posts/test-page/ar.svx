---
title: مشاركة اختبار لموقعي الشخصي
description: هذا ملف ترميز تجريبي فقط لموقعي الشخصي تم إنشاؤه بواسطة Chat-gpt.
date: '2023-9-8'
tags:
  - Chat-gpt
  - نظام التشغيل
words: 185
readTime: 2
published: true
---

<script lang='ts'>
import { CodeBlock } from '@skeletonlabs/skeleton';
import { base } from '$app/paths';
import Video from '$lib/Components/video.svelte';

const code = `
import os

def list_files_in_directory(directory_path):
    try:
        # التحقق مما إذا كان المسار المقدم صالحًا كدليل صحيح
        if not os.path.isdir(directory_path):
            raise ValueError("مسار الدليل غير صالح!")

        # الحصول على قائمة بجميع الملفات والدلائل في المسار المعطى
        files_list = os.listdir(directory_path)

        # تصفية الدلائل وطباعة الملفات المتبقية
        files_only = [file for file in files_list if os.path.isfile(os.path.join(directory_path, file))]
        for file in files_only:
            print(file)

    except ValueError as ve:
        print(ve)

# مثال على الاستخدام:
directory_path = "/المسار/إلى/دليلك"
list_files_in_directory(directory_path)
`
</script>

<img src="{base}/posts/test-page/images/cover.jpg" width="60%" height="30%">

# مقدمة في أنظمة التشغيل

نظام التشغيل (OS) هو عنصر برمجي حاسم يدير موارد الأجهزة والبرمجيات على الكمبيوتر. يعمل كوسيط بين التطبيقات وأجهزة الكمبيوتر، مما يمكن المستخدمين من التفاعل مع النظام وتنفيذ المهام بكفاءة. يقدم هذا الترميز توجيهًا موجزًا حول أنظمة التشغيل ويتضمن مقتطفًا من الشيفرة يعرض كيفية سرد الملفات في دليل باستخدام لغة Python.

## جدول المحتويات

## أنواع أنظمة التشغيل

يمكن تصنيف أنظمة التشغيل إلى عدة فئات استنادًا إلى تصميمها وغرضها:

1. **نظام تشغيل واحد مستخدم واحد مهمة واحدة:** يدعم مستخدم واحد ويشغل تطبيق واحد في وقت واحد (على سبيل المثال، MS-DOS).
2. **نظام تشغيل واحد مستخدم مهمات متعددة:** يدعم مستخدم واحد ويمكن تشغيل عدة تطبيقات بشكل متزامن (مثل Windows و macOS).
3. **نظام تشغيل متعدد المستخدمين:** يسمح بتفاعل عدة مستخدمين مع النظام في وقت واحد (مثل Linux و Unix).
4. **نظام تشغيل في الوقت الحقيقي:** مصمم لتطبيقات تتطلب وقتًا محددًا ويوفر أوقات استجابة قابلة للتنبؤ (مثل VxWorks).
5. **نظام تشغيل مضمن:** محسن لأجهزة محددة أو أنظمة مضمنة (مثل FreeRTOS).

## مقتطف الشيفرة: سرد الملفات في دليل باستخدام Python

توفر Python وسيلة بسيطة لسرد الملفات في دليل باستخدام وحدة الـ `os`. يُظهر مقتطف الشيفرة التالي كيفية تحقيق ذلك:

<div dir="auto">
    <CodeBlock language="python" lineNumbers code={code} ></CodeBlock>
</div>

تأكد من استبدال `"/المسار/إلى/دليلك"` بالمسار الفعلي للدليل الذي ترغب في سرد محتواه. تقوم وظيفة `os.listdir()` باسترداد قائمة بجميع العناصر في الدليل المعطى. ثم نقوم بتصفية الدلائل باستخدام `os.path.isfile()` ونقوم بطباعة أسماء الملفات.

تذكر أن أنظمة التشغيل توفر وظائف متعددة، ووحدة `os` في Python هي طريقة واحدة فقط للتفاعل معها. كل نظام تشغيل لديه مجموعة خاصة من استدعاءات النظام وواجهات البرمجة للوصول وإدارة الموارد بفعالية.

<Video src="{base}/posts/test-page/images/dog.mp4"/>
